DP Pattern 2 - Kadane's algorithm

Question 1- Maximum sum subarray
https://leetcode.com/problems/maximum-subarray/description/
Hint - 
- For loop for all elements
- ** Handling negative cases --> Keep 2 curr_sum and curr ==> make curr_sum = 0 if it become < 0. and keep iterating curr as it is. 

Question 2 -  Maximum Sum Circular Subarray(***Tricky Try dry run and again)
https://leetcode.com/problems/maximum-sum-circular-subarray/description/
Hint - Modified Kadane's algo
- similr to above -> find curr_max and global_max
- Additional find -> curr_min and global_min
- Find total
- If global_max < 0: return global_max --> else max(global_max, total - global_min) : For circular array

Question 3 -- Maximum Product Subarray - 
https://leetcode.com/problems/maximum-product-subarray/description/
https://www.naukri.com/code360/problems/subarray-with-maximum-product_6890008
Hint  
- Main a current min and current max for each element - 
- store max of both those amongst each pt --> O(n) time complexity
- If element = 0, then keep curr_max = 1 and curr_min = 1 (Since we are finding maximum product)
